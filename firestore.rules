rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.admin == true;
    }

    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read, update: if request.auth.uid == userId;
    }

    match /roles/{userId} {
      // PERMITE que um novo utilizador crie a sua própria função.
      // Para o registo de clientes, o script deve enviar { client: true }.
      // Para o registo de administradores (apenas pelo script criar-admin), deve enviar { admin: true }.
      // ESTA REGRA TORNA CRÍTICA A REMOÇÃO DOS FICHEIROS DE CRIAÇÃO DE ADMIN APÓS A UTILIZAÇÃO.
      allow create: if request.auth.uid == userId &&
                     (
                       (request.resource.data.keys().hasOnly(['client']) && request.resource.data.client == true) ||
                       (request.resource.data.keys().hasOnly(['admin']) && request.resource.data.admin == true)
                     );
      
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if isAdmin(); // Permite que um admin altere outras funções, mas não permite que um cliente se promova.
    }

    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
